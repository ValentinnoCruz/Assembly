(0000) 3000  0011000000000000 (   1)                 .ORIG x3000
(3000) 22A3  0010001010100011 (   5)                 LD    R1 numScores
(3001) E4A3  1110010010100011 (   6)                 LEA   R2 scoreArray
(3002) E6A7  1110011010100111 (   7)                 LEA   R3 strArray
(3003) E889  1110100010001001 (   8)                 LEA   R4 inputMsg
(3004) 4933  0100100100110011 (   9)                 JSR   GetTestScore
(3005) 229E  0010001010011110 (  10)                 LD    R1 numScores
(3006) 4962  0100100101100010 (  11)                 JSR   FindMax
(3007) E4A2  1110010010100010 (  12)                 LEA   R2 strArray
(3008) 4900  0100100100000000 (  13)                 JSR   ITOA
(3009) E01D  1110000000011101 (  14)                 LEA   R0 maxMsg
(300A) F022  1111000000100010 (  15)                 TRAP  x22
(300B) E09E  1110000010011110 (  16)                 LEA   R0 strArray
(300C) F022  1111000000100010 (  17)                 TRAP  x22
(300D) 2296  0010001010010110 (  18)                 LD    R1 numScores
(300E) E496  1110010010010110 (  19)                 LEA   R2 scoreArray
(300F) 497A  0100100101111010 (  20)                 JSR   FindMin
(3010) E499  1110010010011001 (  21)                 LEA   R2 strArray
(3011) 48F7  0100100011110111 (  22)                 JSR   ITOA
(3012) E02B  1110000000101011 (  23)                 LEA   R0 minMsg
(3013) F022  1111000000100010 (  24)                 TRAP  x22
(3014) E095  1110000010010101 (  25)                 LEA   R0 strArray
(3015) F022  1111000000100010 (  26)                 TRAP  x22
(3016) 228D  0010001010001101 (  27)                 LD    R1 numScores
(3017) E48D  1110010010001101 (  28)                 LEA   R2 scoreArray
(3018) 4992  0100100110010010 (  29)                 JSR   FindAverage
(3019) E490  1110010010010000 (  30)                 LEA   R2 strArray
(301A) 48EE  0100100011101110 (  31)                 JSR   ITOA
(301B) E039  1110000000111001 (  32)                 LEA   R0 avgMsg
(301C) F022  1111000000100010 (  33)                 TRAP  x22
(301D) E08C  1110000010001100 (  34)                 LEA   R0 strArray
(301E) F022  1111000000100010 (  35)                 TRAP  x22
(301F) 48A3  0100100010100011 (  36)                 JSR   FindGrade
(3020) E04B  1110000001001011 (  37)                 LEA   R0 gradeMsg
(3021) F022  1111000000100010 (  38)                 TRAP  x22
(3022) 1060  0001000001100000 (  39)                 ADD   R0 R1 #0
(3023) F021  1111000000100001 (  40)                 TRAP  x21
(3024) E05F  1110000001011111 (  41)                 LEA   R0 byeMsg
(3025) F022  1111000000100010 (  42)                 TRAP  x22
(3026) F025  1111000000100101 (  43)                 TRAP  x25
(3027) 000A  0000000000001010 (  50) maxMsg          .FILL x000A
(3028) 0054  0000000001010100 (  50)                 .FILL x0054
(3029) 0068  0000000001101000 (  50)                 .FILL x0068
(302A) 0065  0000000001100101 (  50)                 .FILL x0065
(302B) 0020  0000000000100000 (  50)                 .FILL x0020
(302C) 006D  0000000001101101 (  50)                 .FILL x006D
(302D) 0061  0000000001100001 (  50)                 .FILL x0061
(302E) 0078  0000000001111000 (  50)                 .FILL x0078
(302F) 0069  0000000001101001 (  50)                 .FILL x0069
(3030) 006D  0000000001101101 (  50)                 .FILL x006D
(3031) 0075  0000000001110101 (  50)                 .FILL x0075
(3032) 006D  0000000001101101 (  50)                 .FILL x006D
(3033) 0020  0000000000100000 (  50)                 .FILL x0020
(3034) 0073  0000000001110011 (  50)                 .FILL x0073
(3035) 0063  0000000001100011 (  50)                 .FILL x0063
(3036) 006F  0000000001101111 (  50)                 .FILL x006F
(3037) 0072  0000000001110010 (  50)                 .FILL x0072
(3038) 0065  0000000001100101 (  50)                 .FILL x0065
(3039) 0020  0000000000100000 (  50)                 .FILL x0020
(303A) 0069  0000000001101001 (  50)                 .FILL x0069
(303B) 0073  0000000001110011 (  50)                 .FILL x0073
(303C) 0020  0000000000100000 (  50)                 .FILL x0020
(303D) 0000  0000000000000000 (  50)                 .FILL x0000
(303E) 000A  0000000000001010 (  51) minMsg          .FILL x000A
(303F) 0054  0000000001010100 (  51)                 .FILL x0054
(3040) 0068  0000000001101000 (  51)                 .FILL x0068
(3041) 0065  0000000001100101 (  51)                 .FILL x0065
(3042) 0020  0000000000100000 (  51)                 .FILL x0020
(3043) 006D  0000000001101101 (  51)                 .FILL x006D
(3044) 0069  0000000001101001 (  51)                 .FILL x0069
(3045) 006E  0000000001101110 (  51)                 .FILL x006E
(3046) 0069  0000000001101001 (  51)                 .FILL x0069
(3047) 006D  0000000001101101 (  51)                 .FILL x006D
(3048) 0075  0000000001110101 (  51)                 .FILL x0075
(3049) 006D  0000000001101101 (  51)                 .FILL x006D
(304A) 0020  0000000000100000 (  51)                 .FILL x0020
(304B) 0073  0000000001110011 (  51)                 .FILL x0073
(304C) 0063  0000000001100011 (  51)                 .FILL x0063
(304D) 006F  0000000001101111 (  51)                 .FILL x006F
(304E) 0072  0000000001110010 (  51)                 .FILL x0072
(304F) 0065  0000000001100101 (  51)                 .FILL x0065
(3050) 0020  0000000000100000 (  51)                 .FILL x0020
(3051) 0069  0000000001101001 (  51)                 .FILL x0069
(3052) 0073  0000000001110011 (  51)                 .FILL x0073
(3053) 0020  0000000000100000 (  51)                 .FILL x0020
(3054) 0000  0000000000000000 (  51)                 .FILL x0000
(3055) 000A  0000000000001010 (  52) avgMsg          .FILL x000A
(3056) 0054  0000000001010100 (  52)                 .FILL x0054
(3057) 0068  0000000001101000 (  52)                 .FILL x0068
(3058) 0065  0000000001100101 (  52)                 .FILL x0065
(3059) 0020  0000000000100000 (  52)                 .FILL x0020
(305A) 0061  0000000001100001 (  52)                 .FILL x0061
(305B) 0076  0000000001110110 (  52)                 .FILL x0076
(305C) 0065  0000000001100101 (  52)                 .FILL x0065
(305D) 0072  0000000001110010 (  52)                 .FILL x0072
(305E) 0061  0000000001100001 (  52)                 .FILL x0061
(305F) 0067  0000000001100111 (  52)                 .FILL x0067
(3060) 0065  0000000001100101 (  52)                 .FILL x0065
(3061) 0020  0000000000100000 (  52)                 .FILL x0020
(3062) 0073  0000000001110011 (  52)                 .FILL x0073
(3063) 0063  0000000001100011 (  52)                 .FILL x0063
(3064) 006F  0000000001101111 (  52)                 .FILL x006F
(3065) 0072  0000000001110010 (  52)                 .FILL x0072
(3066) 0065  0000000001100101 (  52)                 .FILL x0065
(3067) 0020  0000000000100000 (  52)                 .FILL x0020
(3068) 0069  0000000001101001 (  52)                 .FILL x0069
(3069) 0073  0000000001110011 (  52)                 .FILL x0073
(306A) 0020  0000000000100000 (  52)                 .FILL x0020
(306B) 0000  0000000000000000 (  52)                 .FILL x0000
(306C) 000A  0000000000001010 (  53) gradeMsg        .FILL x000A
(306D) 0054  0000000001010100 (  53)                 .FILL x0054
(306E) 0068  0000000001101000 (  53)                 .FILL x0068
(306F) 0065  0000000001100101 (  53)                 .FILL x0065
(3070) 0020  0000000000100000 (  53)                 .FILL x0020
(3071) 0067  0000000001100111 (  53)                 .FILL x0067
(3072) 0072  0000000001110010 (  53)                 .FILL x0072
(3073) 0061  0000000001100001 (  53)                 .FILL x0061
(3074) 0064  0000000001100100 (  53)                 .FILL x0064
(3075) 0065  0000000001100101 (  53)                 .FILL x0065
(3076) 0020  0000000000100000 (  53)                 .FILL x0020
(3077) 006F  0000000001101111 (  53)                 .FILL x006F
(3078) 0062  0000000001100010 (  53)                 .FILL x0062
(3079) 0074  0000000001110100 (  53)                 .FILL x0074
(307A) 0061  0000000001100001 (  53)                 .FILL x0061
(307B) 0069  0000000001101001 (  53)                 .FILL x0069
(307C) 006E  0000000001101110 (  53)                 .FILL x006E
(307D) 0065  0000000001100101 (  53)                 .FILL x0065
(307E) 0064  0000000001100100 (  53)                 .FILL x0064
(307F) 0020  0000000000100000 (  53)                 .FILL x0020
(3080) 0069  0000000001101001 (  53)                 .FILL x0069
(3081) 0073  0000000001110011 (  53)                 .FILL x0073
(3082) 0020  0000000000100000 (  53)                 .FILL x0020
(3083) 0000  0000000000000000 (  53)                 .FILL x0000
(3084) 000A  0000000000001010 (  54) byeMsg          .FILL x000A
(3085) 0042  0000000001000010 (  54)                 .FILL x0042
(3086) 0079  0000000001111001 (  54)                 .FILL x0079
(3087) 0065  0000000001100101 (  54)                 .FILL x0065
(3088) 002E  0000000000101110 (  54)                 .FILL x002E
(3089) 002E  0000000000101110 (  54)                 .FILL x002E
(308A) 002E  0000000000101110 (  54)                 .FILL x002E
(308B) 0020  0000000000100000 (  54)                 .FILL x0020
(308C) 0000  0000000000000000 (  54)                 .FILL x0000
(308D) 0045  0000000001000101 (  55) inputMsg        .FILL x0045
(308E) 006E  0000000001101110 (  55)                 .FILL x006E
(308F) 0074  0000000001110100 (  55)                 .FILL x0074
(3090) 0065  0000000001100101 (  55)                 .FILL x0065
(3091) 0072  0000000001110010 (  55)                 .FILL x0072
(3092) 0020  0000000000100000 (  55)                 .FILL x0020
(3093) 0061  0000000001100001 (  55)                 .FILL x0061
(3094) 0020  0000000000100000 (  55)                 .FILL x0020
(3095) 0073  0000000001110011 (  55)                 .FILL x0073
(3096) 0063  0000000001100011 (  55)                 .FILL x0063
(3097) 006F  0000000001101111 (  55)                 .FILL x006F
(3098) 0072  0000000001110010 (  55)                 .FILL x0072
(3099) 0065  0000000001100101 (  55)                 .FILL x0065
(309A) 0020  0000000000100000 (  55)                 .FILL x0020
(309B) 0076  0000000001110110 (  55)                 .FILL x0076
(309C) 0061  0000000001100001 (  55)                 .FILL x0061
(309D) 006C  0000000001101100 (  55)                 .FILL x006C
(309E) 0075  0000000001110101 (  55)                 .FILL x0075
(309F) 0065  0000000001100101 (  55)                 .FILL x0065
(30A0) 003A  0000000000111010 (  55)                 .FILL x003A
(30A1) 0020  0000000000100000 (  55)                 .FILL x0020
(30A2) 0000  0000000000000000 (  55)                 .FILL x0000
(30A3) 0000  0000000000000000 (  56) tempRegister    .FILL x0000
(30A4) 0005  0000000000000101 (  57) numScores       .FILL x0005
(30A5) 0000  0000000000000000 (  58) scoreArray      .FILL x0000
(30A6) 0000  0000000000000000 (  59)                 .FILL x0000
(30A7) 0000  0000000000000000 (  60)                 .FILL x0000
(30A8) 0000  0000000000000000 (  61)                 .FILL x0000
(30A9) 0000  0000000000000000 (  62)                 .FILL x0000
(30AA) 0000  0000000000000000 (  63) strArray        .FILL x0000
(30AB) 0000  0000000000000000 (  64)                 .FILL x0000
(30AC) 0000  0000000000000000 (  65)                 .FILL x0000
(30AD) 0000  0000000000000000 (  66)                 .FILL x0000
(30AE) 0000  0000000000000000 (  67)                 .FILL x0000
(30AF) 6000  0110000000000000 (  68) stackPointer    .FILL x6000
(30B0) 0041  0000000001000001 (  69) asciiA          .FILL x0041
(30B1) 005A  0000000001011010 (  70) ninety          .FILL x005A
(30B2) 003C  0000000000111100 (  71) sixty           .FILL x003C
(30B3) FFD0  1111111111010000 (  72) negAscii0       .FILL xFFD0
(30B4) 0030  0000000000110000 (  73) ascii0          .FILL x0030
(30B5) 33ED  0011001111101101 (  84) Push            ST    R1 tempRegister
(30B6) 23F8  0010001111111000 (  85)                 LD    R1 stackPointer
(30B7) 127F  0001001001111111 (  86)                 ADD   R1 R1 #-1
(30B8) 7040  0111000001000000 (  87)                 STR   R0 R1 #0
(30B9) 33F5  0011001111110101 (  88)                 ST    R1 stackPointer
(30BA) 23E8  0010001111101000 (  89)                 LD    R1 tempRegister
(30BB) C1C0  1100000111000000 (  90)                 RET   
(30BC) 33E6  0011001111100110 ( 100) Pop             ST    R1 tempRegister
(30BD) 23F1  0010001111110001 ( 101)                 LD    R1 stackPointer
(30BE) 6040  0110000001000000 ( 102)                 LDR   R0 R1 #0
(30BF) 1261  0001001001100001 ( 103)                 ADD   R1 R1 #1
(30C0) 33EE  0011001111101110 ( 104)                 ST    R1 stackPointer
(30C1) 23E1  0010001111100001 ( 105)                 LD    R1 tempRegister
(30C2) C1C0  1100000111000000 ( 106)                 RET   
(30C3) 11E0  0001000111100000 ( 118) FindGrade       ADD   R0 R7 #0
(30C4) 4FF0  0100111111110000 ( 119)                 JSR   Push
(30C5) 10A0  0001000010100000 ( 120)                 ADD   R0 R2 #0
(30C6) 4FEE  0100111111101110 ( 121)                 JSR   Push
(30C7) 10E0  0001000011100000 ( 122)                 ADD   R0 R3 #0
(30C8) 4FEC  0100111111101100 ( 123)                 JSR   Push
(30C9) 1120  0001000100100000 ( 124)                 ADD   R0 R4 #0
(30CA) 4FEA  0100111111101010 ( 125)                 JSR   Push
(30CB) 1160  0001000101100000 ( 126)                 ADD   R0 R5 #0
(30CC) 4FE8  0100111111101000 ( 127)                 JSR   Push
(30CD) 25E2  0010010111100010 ( 128)                 LD    R2 asciiA
(30CE) 27E2  0010011111100010 ( 129)                 LD    R3 ninety
(30CF) 29E2  0010100111100010 ( 130)                 LD    R4 sixty
(30D0) 9AFF  1001101011111111 ( 132) GradeLoop       NOT   R5 R3
(30D1) 1B61  0001101101100001 ( 133)                 ADD   R5 R5 #1
(30D2) 1B41  0001101101000001 ( 134)                 ADD   R5 R5 R1
(30D3) 0607  0000011000000111 ( 135)                 BRZP  EndGradeLoop
(30D4) 16F6  0001011011110110 ( 136)                 ADD   R3 R3 #-10
(30D5) 14A1  0001010010100001 ( 137)                 ADD   R2 R2 #1
(30D6) 9B3F  1001101100111111 ( 138)                 NOT   R5 R4
(30D7) 1B61  0001101101100001 ( 139)                 ADD   R5 R5 #1
(30D8) 1B43  0001101101000011 ( 140)                 ADD   R5 R5 R3
(30D9) 07F6  0000011111110110 ( 141)                 BRZP  GradeLoop
(30DA) 14A1  0001010010100001 ( 142)                 ADD   R2 R2 #1
(30DB) 12A0  0001001010100000 ( 144) EndGradeLoop    ADD   R1 R2 #0
(30DC) 4FDF  0100111111011111 ( 145)                 JSR   Pop
(30DD) 1A20  0001101000100000 ( 146)                 ADD   R5 R0 #0
(30DE) 4FDD  0100111111011101 ( 147)                 JSR   Pop
(30DF) 1820  0001100000100000 ( 148)                 ADD   R4 R0 #0
(30E0) 4FDB  0100111111011011 ( 149)                 JSR   Pop
(30E1) 1620  0001011000100000 ( 150)                 ADD   R3 R0 #0
(30E2) 4FD9  0100111111011001 ( 151)                 JSR   Pop
(30E3) 1420  0001010000100000 ( 152)                 ADD   R2 R0 #0
(30E4) 4FD7  0100111111010111 ( 153)                 JSR   Pop
(30E5) 1E20  0001111000100000 ( 154)                 ADD   R7 R0 #0
(30E6) C1C0  1100000111000000 ( 155)                 RET   
(30E7) 11E0  0001000111100000 ( 167) ATOI            ADD   R0 R7 #0
(30E8) 4FCC  0100111111001100 ( 168)                 JSR   Push
(30E9) 10A0  0001000010100000 ( 169)                 ADD   R0 R2 #0
(30EA) 4FCA  0100111111001010 ( 170)                 JSR   Push
(30EB) 10E0  0001000011100000 ( 171)                 ADD   R0 R3 #0
(30EC) 4FC8  0100111111001000 ( 172)                 JSR   Push
(30ED) 1120  0001000100100000 ( 173)                 ADD   R0 R4 #0
(30EE) 4FC6  0100111111000110 ( 174)                 JSR   Push
(30EF) 1160  0001000101100000 ( 175)                 ADD   R0 R5 #0
(30F0) 4FC4  0100111111000100 ( 176)                 JSR   Push
(30F1) 54A0  0101010010100000 ( 177)                 AND   R2 R2 #0
(30F2) 14AA  0001010010101010 ( 178)                 ADD   R2 R2 #10
(30F3) 1660  0001011001100000 ( 179)                 ADD   R3 R1 #0
(30F4) 5260  0101001001100000 ( 180)                 AND   R1 R1 #0
(30F5) 29BD  0010100110111101 ( 181)                 LD    R4 negAscii0
(30F6) 6AC0  0110101011000000 ( 183) ATOILoop        LDR   R5 R3 #0
(30F7) 1B60  0001101101100000 ( 184)                 ADD   R5 R5 #0
(30F8) 0405  0000010000000101 ( 185)                 BRZ   EndATOILoop
(30F9) 1B44  0001101101000100 ( 186)                 ADD   R5 R5 R4
(30FA) 48D0  0100100011010000 ( 187)                 JSR   Multiply
(30FB) 1245  0001001001000101 ( 188)                 ADD   R1 R1 R5
(30FC) 16E1  0001011011100001 ( 189)                 ADD   R3 R3 #1
(30FD) 0FF8  0000111111111000 ( 190)                 BRNZP ATOILoop
(30FE) 4FBD  0100111110111101 ( 192) EndATOILoop     JSR   Pop
(30FF) 1A20  0001101000100000 ( 193)                 ADD   R5 R0 #0
(3100) 4FBB  0100111110111011 ( 194)                 JSR   Pop
(3101) 1820  0001100000100000 ( 195)                 ADD   R4 R0 #0
(3102) 4FB9  0100111110111001 ( 196)                 JSR   Pop
(3103) 1620  0001011000100000 ( 197)                 ADD   R3 R0 #0
(3104) 4FB7  0100111110110111 ( 198)                 JSR   Pop
(3105) 1420  0001010000100000 ( 199)                 ADD   R2 R0 #0
(3106) 4FB5  0100111110110101 ( 200)                 JSR   Pop
(3107) 1E20  0001111000100000 ( 201)                 ADD   R7 R0 #0
(3108) C1C0  1100000111000000 ( 202)                 RET   
(3109) 11E0  0001000111100000 ( 215) ITOA            ADD   R0 R7 #0
(310A) 4FAA  0100111110101010 ( 216)                 JSR   Push
(310B) 1060  0001000001100000 ( 217)                 ADD   R0 R1 #0
(310C) 4FA8  0100111110101000 ( 218)                 JSR   Push
(310D) 10A0  0001000010100000 ( 219)                 ADD   R0 R2 #0
(310E) 4FA6  0100111110100110 ( 220)                 JSR   Push
(310F) 10E0  0001000011100000 ( 221)                 ADD   R0 R3 #0
(3110) 4FA4  0100111110100100 ( 222)                 JSR   Push
(3111) 1120  0001000100100000 ( 223)                 ADD   R0 R4 #0
(3112) 4FA2  0100111110100010 ( 224)                 JSR   Push
(3113) 1160  0001000101100000 ( 225)                 ADD   R0 R5 #0
(3114) 4FA0  0100111110100000 ( 226)                 JSR   Push
(3115) 1660  0001011001100000 ( 227)                 ADD   R3 R1 #0
(3116) 18A0  0001100010100000 ( 228)                 ADD   R4 R2 #0
(3117) 5B60  0101101101100000 ( 229)                 AND   R5 R5 #0
(3118) 1B61  0001101101100001 ( 231) DigitCountLoop  ADD   R5 R5 #1
(3119) 54A0  0101010010100000 ( 232)                 AND   R2 R2 #0
(311A) 14AA  0001010010101010 ( 233)                 ADD   R2 R2 #10
(311B) 48C3  0100100011000011 ( 234)                 JSR   Divide
(311C) 12A0  0001001010100000 ( 235)                 ADD   R1 R2 #0
(311D) 0BFA  0000101111111010 ( 236)                 BRNP  DigitCountLoop
(311E) 1B44  0001101101000100 ( 237)                 ADD   R5 R5 R4
(311F) 5020  0101000000100000 ( 238)                 AND   R0 R0 #0
(3120) 7140  0111000101000000 ( 239)                 STR   R0 R5 #0
(3121) 12E0  0001001011100000 ( 240)                 ADD   R1 R3 #0
(3122) 2791  0010011110010001 ( 241)                 LD    R3 ascii0
(3123) 54A0  0101010010100000 ( 243) ConversionLoop  AND   R2 R2 #0
(3124) 14AA  0001010010101010 ( 244)                 ADD   R2 R2 #10
(3125) 48B9  0100100010111001 ( 245)                 JSR   Divide
(3126) 1243  0001001001000011 ( 246)                 ADD   R1 R1 R3
(3127) 1B7F  0001101101111111 ( 247)                 ADD   R5 R5 #-1
(3128) 7340  0111001101000000 ( 248)                 STR   R1 R5 #0
(3129) 12A0  0001001010100000 ( 249)                 ADD   R1 R2 #0
(312A) 0BF8  0000101111111000 ( 250)                 BRNP  ConversionLoop
(312B) 4F90  0100111110010000 ( 251)                 JSR   Pop
(312C) 1A20  0001101000100000 ( 252)                 ADD   R5 R0 #0
(312D) 4F8E  0100111110001110 ( 253)                 JSR   Pop
(312E) 1820  0001100000100000 ( 254)                 ADD   R4 R0 #0
(312F) 4F8C  0100111110001100 ( 255)                 JSR   Pop
(3130) 1620  0001011000100000 ( 256)                 ADD   R3 R0 #0
(3131) 4F8A  0100111110001010 ( 257)                 JSR   Pop
(3132) 1420  0001010000100000 ( 258)                 ADD   R2 R0 #0
(3133) 4F88  0100111110001000 ( 259)                 JSR   Pop
(3134) 1220  0001001000100000 ( 260)                 ADD   R1 R0 #0
(3135) 4F86  0100111110000110 ( 261)                 JSR   Pop
(3136) 1E20  0001111000100000 ( 262)                 ADD   R7 R0 #0
(3137) C1C0  1100000111000000 ( 263)                 RET   
(3138) 11E0  0001000111100000 ( 277) GetTestScore    ADD   R0 R7 #0
(3139) 4F7B  0100111101111011 ( 278)                 JSR   Push
(313A) 1060  0001000001100000 ( 279)                 ADD   R0 R1 #0
(313B) 4F79  0100111101111001 ( 280)                 JSR   Push
(313C) 10A0  0001000010100000 ( 281)                 ADD   R0 R2 #0
(313D) 4F77  0100111101110111 ( 282)                 JSR   Push
(313E) 10E0  0001000011100000 ( 283)                 ADD   R0 R3 #0
(313F) 4F75  0100111101110101 ( 284)                 JSR   Push
(3140) 1120  0001000100100000 ( 285)                 ADD   R0 R4 #0
(3141) 4F73  0100111101110011 ( 286)                 JSR   Push
(3142) 1160  0001000101100000 ( 287)                 ADD   R0 R5 #0
(3143) 4F71  0100111101110001 ( 288)                 JSR   Push
(3144) 11A0  0001000110100000 ( 289)                 ADD   R0 R6 #0
(3145) 4F6F  0100111101101111 ( 290)                 JSR   Push
(3146) 1D20  0001110100100000 ( 291)                 ADD   R6 R4 #0
(3147) 1860  0001100001100000 ( 292)                 ADD   R4 R1 #0
(3148) 11A0  0001000110100000 ( 294) GetScore        ADD   R0 R6 #0
(3149) F022  1111000000100010 ( 295)                 TRAP  x22
(314A) 1AE0  0001101011100000 ( 296)                 ADD   R5 R3 #0
(314B) F020  1111000000100000 ( 298) TakeInput       TRAP  x20
(314C) F021  1111000000100001 ( 299)                 TRAP  x21
(314D) 1236  0001001000110110 ( 300)                 ADD   R1 R0 #-10
(314E) 0403  0000010000000011 ( 301)                 BRZ   EndOfInput
(314F) 7140  0111000101000000 ( 302)                 STR   R0 R5 #0
(3150) 1B61  0001101101100001 ( 303)                 ADD   R5 R5 #1
(3151) 0FF9  0000111111111001 ( 304)                 BRNZP TakeInput
(3152) 5020  0101000000100000 ( 306) EndOfInput      AND   R0 R0 #0
(3153) 7140  0111000101000000 ( 307)                 STR   R0 R5 #0
(3154) 12E0  0001001011100000 ( 308)                 ADD   R1 R3 #0
(3155) 4F91  0100111110010001 ( 309)                 JSR   ATOI
(3156) 7280  0111001010000000 ( 310)                 STR   R1 R2 #0
(3157) 14A1  0001010010100001 ( 311)                 ADD   R2 R2 #1
(3158) 193F  0001100100111111 ( 312)                 ADD   R4 R4 #-1
(3159) 03EE  0000001111101110 ( 313)                 BRP   GetScore
(315A) 4F61  0100111101100001 ( 314)                 JSR   Pop
(315B) 1C20  0001110000100000 ( 315)                 ADD   R6 R0 #0
(315C) 4F5F  0100111101011111 ( 316)                 JSR   Pop
(315D) 1A20  0001101000100000 ( 317)                 ADD   R5 R0 #0
(315E) 4F5D  0100111101011101 ( 318)                 JSR   Pop
(315F) 1820  0001100000100000 ( 319)                 ADD   R4 R0 #0
(3160) 4F5B  0100111101011011 ( 320)                 JSR   Pop
(3161) 1620  0001011000100000 ( 321)                 ADD   R3 R0 #0
(3162) 4F59  0100111101011001 ( 322)                 JSR   Pop
(3163) 1420  0001010000100000 ( 323)                 ADD   R2 R0 #0
(3164) 4F57  0100111101010111 ( 324)                 JSR   Pop
(3165) 1220  0001001000100000 ( 325)                 ADD   R1 R0 #0
(3166) 4F55  0100111101010101 ( 326)                 JSR   Pop
(3167) 1E20  0001111000100000 ( 327)                 ADD   R7 R0 #0
(3168) C1C0  1100000111000000 ( 328)                 RET   
(3169) 11E0  0001000111100000 ( 342) FindMax         ADD   R0 R7 #0
(316A) 4F4A  0100111101001010 ( 343)                 JSR   Push
(316B) 10A0  0001000010100000 ( 344)                 ADD   R0 R2 #0
(316C) 4F48  0100111101001000 ( 345)                 JSR   Push
(316D) 10E0  0001000011100000 ( 346)                 ADD   R0 R3 #0
(316E) 4F46  0100111101000110 ( 347)                 JSR   Push
(316F) 1120  0001000100100000 ( 348)                 ADD   R0 R4 #0
(3170) 4F44  0100111101000100 ( 349)                 JSR   Push
(3171) 1160  0001000101100000 ( 350)                 ADD   R0 R5 #0
(3172) 4F42  0100111101000010 ( 351)                 JSR   Push
(3173) 6680  0110011010000000 ( 352)                 LDR   R3 R2 #0
(3174) 127F  0001001001111111 ( 354) MaxLoop         ADD   R1 R1 #-1
(3175) 0408  0000010000001000 ( 355)                 BRZ   EndMaxLoop
(3176) 14A1  0001010010100001 ( 356)                 ADD   R2 R2 #1
(3177) 6880  0110100010000000 ( 357)                 LDR   R4 R2 #0
(3178) 9AFF  1001101011111111 ( 358)                 NOT   R5 R3
(3179) 1B61  0001101101100001 ( 359)                 ADD   R5 R5 #1
(317A) 1B44  0001101101000100 ( 360)                 ADD   R5 R5 R4
(317B) 0C01  0000110000000001 ( 361)                 BRNZ  DontUpdateMax
(317C) 1720  0001011100100000 ( 362)                 ADD   R3 R4 #0
(317D) 0FF6  0000111111110110 ( 364) DontUpdateMax   BRNZP MaxLoop
(317E) 12E0  0001001011100000 ( 366) EndMaxLoop      ADD   R1 R3 #0
(317F) 4F3C  0100111100111100 ( 367)                 JSR   Pop
(3180) 1A20  0001101000100000 ( 368)                 ADD   R5 R0 #0
(3181) 4F3A  0100111100111010 ( 369)                 JSR   Pop
(3182) 1820  0001100000100000 ( 370)                 ADD   R4 R0 #0
(3183) 4F38  0100111100111000 ( 371)                 JSR   Pop
(3184) 1620  0001011000100000 ( 372)                 ADD   R3 R0 #0
(3185) 4F36  0100111100110110 ( 373)                 JSR   Pop
(3186) 1420  0001010000100000 ( 374)                 ADD   R2 R0 #0
(3187) 4F34  0100111100110100 ( 375)                 JSR   Pop
(3188) 1E20  0001111000100000 ( 376)                 ADD   R7 R0 #0
(3189) C1C0  1100000111000000 ( 377)                 RET   
(318A) 11E0  0001000111100000 ( 391) FindMin         ADD   R0 R7 #0
(318B) 4F29  0100111100101001 ( 392)                 JSR   Push
(318C) 10A0  0001000010100000 ( 393)                 ADD   R0 R2 #0
(318D) 4F27  0100111100100111 ( 394)                 JSR   Push
(318E) 10E0  0001000011100000 ( 395)                 ADD   R0 R3 #0
(318F) 4F25  0100111100100101 ( 396)                 JSR   Push
(3190) 1120  0001000100100000 ( 397)                 ADD   R0 R4 #0
(3191) 4F23  0100111100100011 ( 398)                 JSR   Push
(3192) 1160  0001000101100000 ( 399)                 ADD   R0 R5 #0
(3193) 4F21  0100111100100001 ( 400)                 JSR   Push
(3194) 6680  0110011010000000 ( 401)                 LDR   R3 R2 #0
(3195) 127F  0001001001111111 ( 403) MinLoop         ADD   R1 R1 #-1
(3196) 0408  0000010000001000 ( 404)                 BRZ   EndMinLoop
(3197) 14A1  0001010010100001 ( 405)                 ADD   R2 R2 #1
(3198) 6880  0110100010000000 ( 406)                 LDR   R4 R2 #0
(3199) 9AFF  1001101011111111 ( 407)                 NOT   R5 R3
(319A) 1B61  0001101101100001 ( 408)                 ADD   R5 R5 #1
(319B) 1B44  0001101101000100 ( 409)                 ADD   R5 R5 R4
(319C) 0601  0000011000000001 ( 410)                 BRZP  DontUpdateMin
(319D) 1720  0001011100100000 ( 411)                 ADD   R3 R4 #0
(319E) 0FF6  0000111111110110 ( 413) DontUpdateMin   BRNZP MinLoop
(319F) 12E0  0001001011100000 ( 415) EndMinLoop      ADD   R1 R3 #0
(31A0) 4F1B  0100111100011011 ( 416)                 JSR   Pop
(31A1) 1A20  0001101000100000 ( 417)                 ADD   R5 R0 #0
(31A2) 4F19  0100111100011001 ( 418)                 JSR   Pop
(31A3) 1820  0001100000100000 ( 419)                 ADD   R4 R0 #0
(31A4) 4F17  0100111100010111 ( 420)                 JSR   Pop
(31A5) 1620  0001011000100000 ( 421)                 ADD   R3 R0 #0
(31A6) 4F15  0100111100010101 ( 422)                 JSR   Pop
(31A7) 1420  0001010000100000 ( 423)                 ADD   R2 R0 #0
(31A8) 4F13  0100111100010011 ( 424)                 JSR   Pop
(31A9) 1E20  0001111000100000 ( 425)                 ADD   R7 R0 #0
(31AA) C1C0  1100000111000000 ( 426)                 RET   
(31AB) 11E0  0001000111100000 ( 440) FindAverage     ADD   R0 R7 #0
(31AC) 4F08  0100111100001000 ( 441)                 JSR   Push
(31AD) 10A0  0001000010100000 ( 442)                 ADD   R0 R2 #0
(31AE) 4F06  0100111100000110 ( 443)                 JSR   Push
(31AF) 10E0  0001000011100000 ( 444)                 ADD   R0 R3 #0
(31B0) 4F04  0100111100000100 ( 445)                 JSR   Push
(31B1) 1120  0001000100100000 ( 446)                 ADD   R0 R4 #0
(31B2) 4F02  0100111100000010 ( 447)                 JSR   Push
(31B3) 1160  0001000101100000 ( 448)                 ADD   R0 R5 #0
(31B4) 4F00  0100111100000000 ( 449)                 JSR   Push
(31B5) 1A60  0001101001100000 ( 450)                 ADD   R5 R1 #0
(31B6) 56E0  0101011011100000 ( 451)                 AND   R3 R3 #0
(31B7) 6880  0110100010000000 ( 453) AvgLoop         LDR   R4 R2 #0
(31B8) 16C4  0001011011000100 ( 454)                 ADD   R3 R3 R4
(31B9) 14A1  0001010010100001 ( 455)                 ADD   R2 R2 #1
(31BA) 127F  0001001001111111 ( 456)                 ADD   R1 R1 #-1
(31BB) 0BFB  0000101111111011 ( 457)                 BRNP  AvgLoop
(31BC) 12E0  0001001011100000 ( 458)                 ADD   R1 R3 #0
(31BD) 1560  0001010101100000 ( 459)                 ADD   R2 R5 #0
(31BE) 4820  0100100000100000 ( 460)                 JSR   Divide
(31BF) 12A0  0001001010100000 ( 461)                 ADD   R1 R2 #0
(31C0) 4EFB  0100111011111011 ( 462)                 JSR   Pop
(31C1) 1A20  0001101000100000 ( 463)                 ADD   R5 R0 #0
(31C2) 4EF9  0100111011111001 ( 464)                 JSR   Pop
(31C3) 1820  0001100000100000 ( 465)                 ADD   R4 R0 #0
(31C4) 4EF7  0100111011110111 ( 466)                 JSR   Pop
(31C5) 1620  0001011000100000 ( 467)                 ADD   R3 R0 #0
(31C6) 4EF5  0100111011110101 ( 468)                 JSR   Pop
(31C7) 1420  0001010000100000 ( 469)                 ADD   R2 R0 #0
(31C8) 4EF3  0100111011110011 ( 470)                 JSR   Pop
(31C9) 1E20  0001111000100000 ( 471)                 ADD   R7 R0 #0
(31CA) C1C0  1100000111000000 ( 472)                 RET   
(31CB) 11E0  0001000111100000 ( 486) Multiply        ADD   R0 R7 #0
(31CC) 4EE8  0100111011101000 ( 487)                 JSR   Push
(31CD) 10A0  0001000010100000 ( 488)                 ADD   R0 R2 #0
(31CE) 4EE6  0100111011100110 ( 489)                 JSR   Push
(31CF) 10E0  0001000011100000 ( 490)                 ADD   R0 R3 #0
(31D0) 4EE4  0100111011100100 ( 491)                 JSR   Push
(31D1) 56E0  0101011011100000 ( 492)                 AND   R3 R3 #0
(31D2) 1260  0001001001100000 ( 494) MulLoop         ADD   R1 R1 #0
(31D3) 0403  0000010000000011 ( 495)                 BRZ   EndMulLoop
(31D4) 16C2  0001011011000010 ( 496)                 ADD   R3 R3 R2
(31D5) 127F  0001001001111111 ( 497)                 ADD   R1 R1 #-1
(31D6) 0FFB  0000111111111011 ( 498)                 BRNZP MulLoop
(31D7) 12E0  0001001011100000 ( 500) EndMulLoop      ADD   R1 R3 #0
(31D8) 4EE3  0100111011100011 ( 501)                 JSR   Pop
(31D9) 1620  0001011000100000 ( 502)                 ADD   R3 R0 #0
(31DA) 4EE1  0100111011100001 ( 503)                 JSR   Pop
(31DB) 1420  0001010000100000 ( 504)                 ADD   R2 R0 #0
(31DC) 4EDF  0100111011011111 ( 505)                 JSR   Pop
(31DD) 1E20  0001111000100000 ( 506)                 ADD   R7 R0 #0
(31DE) C1C0  1100000111000000 ( 507)                 RET   
(31DF) 11E0  0001000111100000 ( 521) Divide          ADD   R0 R7 #0
(31E0) 4ED4  0100111011010100 ( 522)                 JSR   Push
(31E1) 10E0  0001000011100000 ( 523)                 ADD   R0 R3 #0
(31E2) 4ED2  0100111011010010 ( 524)                 JSR   Push
(31E3) 1120  0001000100100000 ( 525)                 ADD   R0 R4 #0
(31E4) 4ED0  0100111011010000 ( 526)                 JSR   Push
(31E5) 1160  0001000101100000 ( 527)                 ADD   R0 R5 #0
(31E6) 4ECE  0100111011001110 ( 528)                 JSR   Push
(31E7) 56E0  0101011011100000 ( 529)                 AND   R3 R3 #0
(31E8) 98BF  1001100010111111 ( 530)                 NOT   R4 R2
(31E9) 1921  0001100100100001 ( 531)                 ADD   R4 R4 #1
(31EA) 1B01  0001101100000001 ( 533) DivLoop         ADD   R5 R4 R1
(31EB) 0803  0000100000000011 ( 534)                 BRN   EndDivLoop
(31EC) 1244  0001001001000100 ( 535)                 ADD   R1 R1 R4
(31ED) 16E1  0001011011100001 ( 536)                 ADD   R3 R3 #1
(31EE) 0FFB  0000111111111011 ( 537)                 BRNZP DivLoop
(31EF) 14E0  0001010011100000 ( 539) EndDivLoop      ADD   R2 R3 #0
(31F0) 4ECB  0100111011001011 ( 540)                 JSR   Pop
(31F1) 1A20  0001101000100000 ( 541)                 ADD   R5 R0 #0
(31F2) 4EC9  0100111011001001 ( 542)                 JSR   Pop
(31F3) 1820  0001100000100000 ( 543)                 ADD   R4 R0 #0
(31F4) 4EC7  0100111011000111 ( 544)                 JSR   Pop
(31F5) 1620  0001011000100000 ( 545)                 ADD   R3 R0 #0
(31F6) 4EC5  0100111011000101 ( 546)                 JSR   Pop
(31F7) 1E20  0001111000100000 ( 547)                 ADD   R7 R0 #0
(31F8) C1C0  1100000111000000 ( 548)                 RET   
